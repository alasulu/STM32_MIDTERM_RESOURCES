
system_tick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000150  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b4  08000150  08000150  00001150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000304  0800030c  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000304  08000304  0000130c  2**0
                  CONTENTS
  4 .ARM          00000000  08000304  08000304  0000130c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000304  0800030c  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000304  08000304  00001304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000308  08000308  00001308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800030c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800030c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000315  00000000  00000000  00001335  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001b4  00000000  00000000  0000164a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  00001800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000003f  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018e1e  00000000  00000000  000018a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c5b  00000000  00000000  0001a6c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00084179  00000000  00000000  0001b320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0009f499  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000090  00000000  00000000  0009f4dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  0009f56c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000150 <__do_global_dtors_aux>:
 8000150:	b510      	push	{r4, lr}
 8000152:	4c05      	ldr	r4, [pc, #20]	@ (8000168 <__do_global_dtors_aux+0x18>)
 8000154:	7823      	ldrb	r3, [r4, #0]
 8000156:	b933      	cbnz	r3, 8000166 <__do_global_dtors_aux+0x16>
 8000158:	4b04      	ldr	r3, [pc, #16]	@ (800016c <__do_global_dtors_aux+0x1c>)
 800015a:	b113      	cbz	r3, 8000162 <__do_global_dtors_aux+0x12>
 800015c:	4804      	ldr	r0, [pc, #16]	@ (8000170 <__do_global_dtors_aux+0x20>)
 800015e:	f3af 8000 	nop.w
 8000162:	2301      	movs	r3, #1
 8000164:	7023      	strb	r3, [r4, #0]
 8000166:	bd10      	pop	{r4, pc}
 8000168:	20000000 	.word	0x20000000
 800016c:	00000000 	.word	0x00000000
 8000170:	080002ec 	.word	0x080002ec

08000174 <frame_dummy>:
 8000174:	b508      	push	{r3, lr}
 8000176:	4b03      	ldr	r3, [pc, #12]	@ (8000184 <frame_dummy+0x10>)
 8000178:	b11b      	cbz	r3, 8000182 <frame_dummy+0xe>
 800017a:	4903      	ldr	r1, [pc, #12]	@ (8000188 <frame_dummy+0x14>)
 800017c:	4803      	ldr	r0, [pc, #12]	@ (800018c <frame_dummy+0x18>)
 800017e:	f3af 8000 	nop.w
 8000182:	bd08      	pop	{r3, pc}
 8000184:	00000000 	.word	0x00000000
 8000188:	20000004 	.word	0x20000004
 800018c:	080002ec 	.word	0x080002ec

08000190 <main>:
#define GPIOAEN 	(1U<<2)
#define PIN5		(1U<<5)
#define LED5		PIN5
#define LED5_RESET	(1U<<21)

int main(void){
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0

	//Enable clock acces for GPIOA
	RCC->APB2ENR |= GPIOAEN;
 8000194:	4b13      	ldr	r3, [pc, #76]	@ (80001e4 <main+0x54>)
 8000196:	699b      	ldr	r3, [r3, #24]
 8000198:	4a12      	ldr	r2, [pc, #72]	@ (80001e4 <main+0x54>)
 800019a:	f043 0304 	orr.w	r3, r3, #4
 800019e:	6193      	str	r3, [r2, #24]

	//Set PA5 as output pin
	GPIOA->CRL &= ~(0xF<<20);
 80001a0:	4b11      	ldr	r3, [pc, #68]	@ (80001e8 <main+0x58>)
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	4a10      	ldr	r2, [pc, #64]	@ (80001e8 <main+0x58>)
 80001a6:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80001aa:	6013      	str	r3, [r2, #0]
	GPIOA->CRL |= (0x1<<20); // 01: Output mode, max speed 10 MHz.
 80001ac:	4b0e      	ldr	r3, [pc, #56]	@ (80001e8 <main+0x58>)
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	4a0d      	ldr	r2, [pc, #52]	@ (80001e8 <main+0x58>)
 80001b2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80001b6:	6013      	str	r3, [r2, #0]

	while(1)
	{
		GPIOA->BSRR |= LED5;
 80001b8:	4b0b      	ldr	r3, [pc, #44]	@ (80001e8 <main+0x58>)
 80001ba:	691b      	ldr	r3, [r3, #16]
 80001bc:	4a0a      	ldr	r2, [pc, #40]	@ (80001e8 <main+0x58>)
 80001be:	f043 0320 	orr.w	r3, r3, #32
 80001c2:	6113      	str	r3, [r2, #16]
		systickDelayMs(1000);
 80001c4:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80001c8:	f000 f810 	bl	80001ec <systickDelayMs>
		GPIOA->BSRR |= LED5_RESET;
 80001cc:	4b06      	ldr	r3, [pc, #24]	@ (80001e8 <main+0x58>)
 80001ce:	691b      	ldr	r3, [r3, #16]
 80001d0:	4a05      	ldr	r2, [pc, #20]	@ (80001e8 <main+0x58>)
 80001d2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80001d6:	6113      	str	r3, [r2, #16]
		systickDelayMs(1000);
 80001d8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80001dc:	f000 f806 	bl	80001ec <systickDelayMs>
		GPIOA->BSRR |= LED5;
 80001e0:	bf00      	nop
 80001e2:	e7e9      	b.n	80001b8 <main+0x28>
 80001e4:	40021000 	.word	0x40021000
 80001e8:	40010800 	.word	0x40010800

080001ec <systickDelayMs>:

#define SYSTICK_LOAD_VAL 	(9000)
#define CTRL_CONFIGURATION	(0x5<<0)
#define CTRL_COUNTERFLAG	(0x1<<16)

void systickDelayMs(int delay){
 80001ec:	b480      	push	{r7}
 80001ee:	b085      	sub	sp, #20
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
// turning back an integer n value

	//--Configure the Systick--//

	//Reloads with number of clock per millisecond//
	SysTick->LOAD |= SYSTICK_LOAD_VAL;
 80001f4:	4b15      	ldr	r3, [pc, #84]	@ (800024c <systickDelayMs+0x60>)
 80001f6:	685b      	ldr	r3, [r3, #4]
 80001f8:	4a14      	ldr	r2, [pc, #80]	@ (800024c <systickDelayMs+0x60>)
 80001fa:	f443 530c 	orr.w	r3, r3, #8960	@ 0x2300
 80001fe:	f043 0328 	orr.w	r3, r3, #40	@ 0x28
 8000202:	6053      	str	r3, [r2, #4]

	//Clear Systick Current Value Register//
	//Enable Systick and select internal clock source//
	SysTick->VAL  |= 0;
 8000204:	4b11      	ldr	r3, [pc, #68]	@ (800024c <systickDelayMs+0x60>)
 8000206:	4a11      	ldr	r2, [pc, #68]	@ (800024c <systickDelayMs+0x60>)
 8000208:	689b      	ldr	r3, [r3, #8]
 800020a:	6093      	str	r3, [r2, #8]
	SysTick->CTRL |= CTRL_CONFIGURATION; /*  1 = counter enabled (0th bit).
 800020c:	4b0f      	ldr	r3, [pc, #60]	@ (800024c <systickDelayMs+0x60>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a0e      	ldr	r2, [pc, #56]	@ (800024c <systickDelayMs+0x60>)
 8000212:	f043 0305 	orr.w	r3, r3, #5
 8000216:	6013      	str	r3, [r2, #0]
	1 = processor clock (3rd bit) */

	for(int i=0;i<delay;i++){
 8000218:	2300      	movs	r3, #0
 800021a:	60fb      	str	r3, [r7, #12]
 800021c:	e009      	b.n	8000232 <systickDelayMs+0x46>
		 // Wait until count flag is set
		while ((SysTick->CTRL & CTRL_COUNTERFLAG) == 0); /* COUNTFLAG Returns
 800021e:	bf00      	nop
 8000220:	4b0a      	ldr	r3, [pc, #40]	@ (800024c <systickDelayMs+0x60>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000228:	2b00      	cmp	r3, #0
 800022a:	d0f9      	beq.n	8000220 <systickDelayMs+0x34>
	for(int i=0;i<delay;i++){
 800022c:	68fb      	ldr	r3, [r7, #12]
 800022e:	3301      	adds	r3, #1
 8000230:	60fb      	str	r3, [r7, #12]
 8000232:	68fa      	ldr	r2, [r7, #12]
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	429a      	cmp	r2, r3
 8000238:	dbf1      	blt.n	800021e <systickDelayMs+0x32>
		1 if timer counted to 0 since last time this was read. */
	}

	SysTick->CTRL = 0;
 800023a:	4b04      	ldr	r3, [pc, #16]	@ (800024c <systickDelayMs+0x60>)
 800023c:	2200      	movs	r2, #0
 800023e:	601a      	str	r2, [r3, #0]

}
 8000240:	bf00      	nop
 8000242:	3714      	adds	r7, #20
 8000244:	46bd      	mov	sp, r7
 8000246:	bc80      	pop	{r7}
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop
 800024c:	e000e010 	.word	0xe000e010

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	@ (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	@ (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	@ (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	@ (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	@ (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	@ (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f811 	bl	80002a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f7ff ff85 	bl	8000190 <main>

08000286 <LoopForever>:

LoopForever:
  b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	0800030c 	.word	0x0800030c
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC1_2_IRQHandler>
	...

080002a4 <__libc_init_array>:
 80002a4:	b570      	push	{r4, r5, r6, lr}
 80002a6:	2600      	movs	r6, #0
 80002a8:	4d0c      	ldr	r5, [pc, #48]	@ (80002dc <__libc_init_array+0x38>)
 80002aa:	4c0d      	ldr	r4, [pc, #52]	@ (80002e0 <__libc_init_array+0x3c>)
 80002ac:	1b64      	subs	r4, r4, r5
 80002ae:	10a4      	asrs	r4, r4, #2
 80002b0:	42a6      	cmp	r6, r4
 80002b2:	d109      	bne.n	80002c8 <__libc_init_array+0x24>
 80002b4:	f000 f81a 	bl	80002ec <_init>
 80002b8:	2600      	movs	r6, #0
 80002ba:	4d0a      	ldr	r5, [pc, #40]	@ (80002e4 <__libc_init_array+0x40>)
 80002bc:	4c0a      	ldr	r4, [pc, #40]	@ (80002e8 <__libc_init_array+0x44>)
 80002be:	1b64      	subs	r4, r4, r5
 80002c0:	10a4      	asrs	r4, r4, #2
 80002c2:	42a6      	cmp	r6, r4
 80002c4:	d105      	bne.n	80002d2 <__libc_init_array+0x2e>
 80002c6:	bd70      	pop	{r4, r5, r6, pc}
 80002c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002cc:	4798      	blx	r3
 80002ce:	3601      	adds	r6, #1
 80002d0:	e7ee      	b.n	80002b0 <__libc_init_array+0xc>
 80002d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d6:	4798      	blx	r3
 80002d8:	3601      	adds	r6, #1
 80002da:	e7f2      	b.n	80002c2 <__libc_init_array+0x1e>
 80002dc:	08000304 	.word	0x08000304
 80002e0:	08000304 	.word	0x08000304
 80002e4:	08000304 	.word	0x08000304
 80002e8:	08000308 	.word	0x08000308

080002ec <_init>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr

080002f8 <_fini>:
 80002f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fa:	bf00      	nop
 80002fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fe:	bc08      	pop	{r3}
 8000300:	469e      	mov	lr, r3
 8000302:	4770      	bx	lr
